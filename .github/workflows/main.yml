on:
  push:
    branches:
      - master
  workflow_dispatch:
name: Deploy pricing

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Check for changes in data_etl
        id: dataetl_changed
        run: |
          git fetch origin master
          CHANGED=$(git diff --name-only origin/master ${{ github.sha }} | grep -E '^data_etl/' || true)
          if [ -n "$CHANGED" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and deploy
        if: steps.dataetl_changed.outputs.changed == 'true'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mtg-pricing
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd data_etl
          docker build -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:latest
          cd ..

      - name: Check for changes in card-search
        id: cardsearch_changed
        run: |
          git fetch origin master
          CHANGED=$(git diff --name-only origin/master ${{ github.sha }} | grep -E '^card-search/' || true)
          if [ -n "$CHANGED" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and deploy card-search
        if: steps.cardsearch_changed.outputs.changed == 'true'
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mtg-pricing-search
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd card-search
          ./gradlew build
          docker build -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:latest
          cd ..
